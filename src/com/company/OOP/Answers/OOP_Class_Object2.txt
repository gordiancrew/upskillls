1.Q:Дайте развернутое объяснение трем концепциям ООП.
1.A:

2.Q:Опишите процедуру инициализации полей класса и полей экземпляра класса. Когда инициализируются поля класса,
    а когда – поля экземпляров класса. Какие значения присваиваются полям по умолчанию?
    Где еще в классе полям могут быть присвоены начальные значения?
  A:

3.Q:Приведите правила, которым должен следовать компонент java-bean.

4.Q:Дайте определение перегрузке методов. Как вы думаете, чем удобна перегрузка методов?
    Укажите, какие методы могут перегружаться, и какими методами они могут быть перегружены?
    Можно ли перегрузить методы в базовом и производном классах? Можно ли private метод базового класса
    перегрузить public методов производного? Можно ли перегрузить конструкторы, и можно ли при перегрузке
    конструкторов менять атрибуты доступа у конструкторов?
  A:

5.Q:Объясните, что такое раннее и позднее связывание? Перегрузка – это раннее или позднее связывание?
  Объясните правила, которым следует компилятор при разрешении перегрузки;
  в том числе, если методы перегружаются примитивными типами, между которыми возможно неявное приведение или
  ссылочными типами, состоящими в иерархической связи.
A:

6.Q:Объясните, как вы понимаете, что такое неявная ссылка this? В каких методах эта ссылка присутствует,
    а в каких – нет, и почему?
  A:

7.Q:Что такое финальные поля, какие поля можно объявить со спецификатором final?
    Где можно инициализировать финальные поля?
  A:

8.Q:Что такое статические поля, статические финальные поля и статические методы.
    К чему имеют доступ статические методы? Можно ли перегрузить и переопределить статические методы?
    Наследуются ли статические методы?
  A:

9.Q:Что такое логические и статические блоки инициализации? Сколько их может быть в классе,
    в каком порядке они могут быть размещены и в каком порядке вызываются?
  A:

10Q:Что представляют собой методы с переменным числом параметров, как передаются параметры в такие методы
    и что представляет собой такой параметр в методе? Как осуществляется выбор подходящего метода,
    при использовании перегрузки для методов с переменным числом параметров?
  A:

11Q:Чем является класс Object? Перечислите известные вам методы класса  Object, укажите их назначение.
  A:

12Q:Что такое хэш-значение? Объясните, почему два разных объекта могут сгенерировать одинаковые хэш-коды?
  A:

13Q:Как вы думаете, для чего используется наследование классов в java-программе? Приведите пример наследования.
    Как вы думаете, поля и методы, помеченными модификатором доступа private, наследуются?
  A:

14Q:Укажите, как вызываются конструкторы при создании объекта производного класса?
    Что в конструкторе класса делает оператор super()? Возможно ли в одном конструкторе использовать
    операторы super() и this()?
  A:

15Q:Объясните, как вы понимаете утверждения: “ссылка базового класса может ссылаться на объекты своих
    производных типов” и “объект производного класса может быть использован везде, где ожидается объект его
    базового типа”. Верно ли обратное и почему?
  A:

16Q:Что такое переопределение методов? Как вы думаете, зачем они нужны?
    Можно ли менять возвращаемый тип при переопределении методов? Можно ли менять атрибуты доступа при
    переопределении методов? Можно ли переопределить методы в рамках одного класса?
  A:

17Q:Определите правило вызова переопределенных методов.
    Можно ли статические методы переопределить нестатическими и наоборот?
  A:

18Q:Какие свойства имеют финальные методы и финальные классы? Как вы думаете, зачем их использовать?
  A:

19Q:Укажите правила приведения типов при наследовании. Напишите примеры явного и неявного преобразования
    ссылочных типов. Объясните, какие ошибки могут возникать при явном преобразовании ссылочных типов.
  A:

20Q:Что такое объект класса Class? Чем использование метода getClass() и последующего сравнения возвращенного
    значения с Type.class отличается от использования оператора instanceof?
  A:

21Q:Укажите правила переопределения методов equals(), hashCode() и toString().
  A:

22Q:Что такое абстрактные классы и методы? Зачем они нужны? Бывают ли случаи, когда абстрактные методы содержат тело?
    Можно ли в абстрактных классах определять конструкторы? Могут ли абстрактные классы содержать неабстрактные методы?
    Можно ли от абстрактных классов создавать объекты и почему?
  A:

23Q:Что такое интерфейсы? Как определить и реализовать интерфейс в java-программе?
    Укажите спецификаторы, которые приобретают методы и поля, определенные в интерфейсе.
    Можно ли описывать в интерфейсе конструкторы и создавать объекты? Можно ли создавать интерфейсные ссылки и если да,
    то на какие объекты они могут ссылаться?
  A:

24Q:Для чего служит интерфейс Clonable? Как правильно переопределить метод clone() класса Object,
    для того, что объект мог создавать свои адекватные копии?
  A:

25Q:Для чего служат интерфейсы Comparable и Comparator? В каких случаях предпочтительнее использовать первый,
    а когда – второй? Как их реализовать и использовать?
 A: