1.QUESTION:Объясните, что имеется в виду, когда говорится: Java-язык программирования и Java-платформа.
  ANSWER:Java- это универсальный обьекто-ориентированный язык программирования,
    который широко используется для различных программ.Язык java можно использовать на любой платформе,
    если на ней установлена среда исполнения Java(Java Runtime Environment).
2.QUESTION: Поясните, как связаны имя java-файла и классы, которые в этом файле объявляются.
  ANSWER:Имнена java-классов совпадают с именем файла  в котором этот класс обьявлен.
3.Q:Расшифруйте аббревиатуры JVM, JDK и JRE; покажите, где “они находятся” и что собой представляют.
  A:JVM-Java Virtual Machine-  виртуальная машина java. Основная часть исполняющей системы java(JRE).
    JVM выполняет запуск кода и предоставляет среду для выполнения этого кода.
    JDK- Java Development Kit- комплект разработчика приложений на языке java. Включает в себя компилятор java,
    стандартные библиотеки классов java, примеры, документацию, различные утилиты и исполнительную систему java.
    JRE-Java Runtime Environment — минимальная реализация виртуальной машины, необходимая для исполнения Java-приложений,
    без компилятора и других средств разработки. Состоит из виртуальной машины — Java Virtual Machine
    и библиотеки Java-классов.
4.Q:Объясните, как скомпилировать и запустить приложение из командной строки, а также зачем в переменных
    среды окружения прописывать пути к установленному jdk.
 A:Независимо от того, какую операционную систему вы используете, Linux, Mac или Windows,
   если на вашем компьютере установлен JDK (Java Development Kit), вы можете в консоли набрать следующие команды чтобы
   скомпилировать и запустить программу:
   -javac (или  javac.exe) и в качестве параметров указать имя файла.
   -java (или  java.exe) и в качестве параметров указать имя файла.
   В первом случае будет вызван компилятор javac.exe, а во втором случае — запускалка java.exe,
   которая стартует нашу программу. Эти файлы лежат в папке bin  вашего JDK.
5.Q:Перечислите атрибуты доступа, объясните их действие.
  A: Модификаторы доступа это ключевые слова, которые регулируют уровень доступа кразным частям кода.
    Существуют 4 модификатора:
    -private(ограничивает видимоcть данных и методов пределами одного класса).
    -default(он не пишится, а присваевается по умолчанию, он ограничевает видимость в пределах пакета,
     без классов наследников).
    -protect( ограничивает видимость в пределах пакета и также позволяет видеть классы-наследники).
    -public(это видимость для всех, части кода, помеченные public предназначены для конечного пользования).
6.Q:Что такое пакеты в java-программе, что представляют собой пакеты на диске?
    Каково соглашение по именованию пакетов? Как создать пакет?
  A:Пакеты это механизм, позволяющий организовать Java классы в пространстве имен.
    Файлы одного пакета могут храниться в разных папках.
    Имен пакетам присваиваются по принципу: первая часть имени должна состоять из перевернутого доменного имени
    разработчика класса.
    Пакет создается при помощи оператора package , написать имя пакета после package в первой строке каждого
    файла для этого пакета.
7.Q:Объясните, какие классы, интерфейсы, перечисления необходимо импортировать в вашу программу, как это сделать.
    Влияет ли импорт пакета на импорт классов и др., лежащего в подпакетах?
    Какой пакет в Java импортируется по умолчанию?
  A:Если в программе необходимо использование классов из  других пакетов в java есть оператор import.
    Благодаря нему на импортируемый класс можно ссылаться из данного класса используя только его имя.
    Оператор import служит для удобства, формально можно обойтись без него, но тогда нужно указывать
    полное имя класса с именем пакета. Оператор import следует сразу после оператора packayge.
    Пакет java.lang импортируется в класс по умолчанию.
8.Q:Объясните различия между терминами “объект” и “ссылка на объект”.
  A:Объект это экземпляр класса, так сказать житель класса, а ссылка на объект это переменная ,
    ссылающаяся на данный объект, так сказать адрес этого жителя на листике.
9.Q:Какие примитивные типы Java вы знаете, как создать переменные примитивных типов? Объясните процедуру,
    по которой переменные примитивных типов передаются в методы как параметры.
  A:В java есть 8 примитивных типов, которые делятся на 4 группы:
    -целы числа: byte, short, int, long.
    -числа с плавающей точкой(вещественные): float, double.
    -логические: boolean.
    -символьные: char.
    Для создания примитивной переменной нужно указать ее тип, затем имя и проинициализировать,
    используя знак"=" и указать начальное значение.
    Для того что бы  передать переменную в параметры медода, нужно в аргументах вызова метода указать значение
    типа, указанного в аргументах метода, либо имя переменной соответствующего типа.
10.Q:
   A:
